#mmenu_screen.container-fluid.main_container.text-white.d-flex data-controller="room"
  .row.flex-fill
    .col-sm-6.mmenu_screen--direktaction.bg-faded.flex-fill
      .row.h-75
        .col-sm-12
          /! Button for information
          iframe frameborder='0' id='youtube' src="https://www.youtube.com/embed/Sw-H1zXMfEM?enablejsapi=1&autoplay=1"
      .row.h-25
        .col-sm-12
          /! Button for information
            /.col.bg-primary.text-white.text-center.mb-4 data-target='room.videoName'
              | Local Video
          video[data-target="room.main" autoplay muted playsinline]
          = ' '
          video[data-target="room.remote" autoplay playsinline]
    .col-sm-6.h-100
      .row.h-25
        .col-sm-12
          .col.justify-content-center data-controller='search'
            = form_with(url: "/", method: :get, data: {action: "submit->search#submit"}) do |f|
              = label_tag(:q, "Search for Video")
              = text_field_tag :q, params[:q], data: {target: "search.query"}
              = submit_tag("Search", class: "btn btn-primary")
            #search-results data-target='search.results'
      .row.h-50
        .col-sm-12
          #playlist.col data-controller='playlist' style="overflow-y: scroll"
            h4
              | Playlist
              =<> button_tag type: 'button', class: "btn btn-primary", data: {action: "playlist#play"}
                | Play
              =<> button_tag type: 'button', class: "btn btn-primary", data: {action: "playlist#pause"}
                | Pause
              =<> button_tag type: 'button', class: "btn btn-primary", data: {action: "playlist#next"}
               | Next Song
            #playlist-results data-target='playlist.results'
              | Loading
      .row.h-25
        .col-sm-12
          .chat
            - ChatMessage.all.each do |message|
              .chat-message-container
                .row.no-gutters
                  .col-auto.text-center.text-black-50
                    = message.user_name
                    /img.avatar alt="" src="#{gravatar_url(room_message.user)}" /
                  .col
                    .message-content
                      p.mb-1
                        = message.message
                      .text-right
                        small
                          = message.created_at
          = form_with(url: "#", method: :get, data: {action: "submit->chat#submit"}) do |f|
            .input-group.mb-3
              = text_field_tag :message, nil, class: 'chat-input'
              .input-group-append
                = submit_tag "Send", class: 'btn btn-primary chat-input'

javascript:
  var tag = document.createElement('script');
  tag.id = 'iframe-demo';
  tag.src = 'https://www.youtube.com/iframe_api';
  var firstScriptTag = document.getElementsByTagName('script')[0];
  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

  var player;

  function onYouTubeIframeAPIReady() {
    player = new YT.Player('youtube', {
      playerVars: { 'autoplay': 1}, //, 'controls': 0
      events: {
        'onReady': onPlayerReady,
        'onStateChange': onPlayerStateChange
      }
    });
  }

  function onPlayerReady(event) {
    console.log('calling start play!')
    console.log(event.target)
    event.target.playVideo();
  }

  function changeBorderColor(playerStatus) {
    var color;
    if (playerStatus == -1) {
      color = "#37474F"; // unstarted = gray
    } else if (playerStatus == 0) {
      color = "#FFFF00"; // ended = yellow
    } else if (playerStatus == 1) {
      color = "#33691E"; // playing = green
    } else if (playerStatus == 2) {
      color = "#DD2C00"; // paused = red
    } else if (playerStatus == 3) {
      color = "#AA00FF"; // buffering = purple
    } else if (playerStatus == 5) {
      color = "#FF6DOO"; // video cued = orange
    }
    if (color) {
      document.getElementById('youtube').style.borderColor = color;
    }
  }

  function onPlayerStateChange(event) {
    changeBorderColor(event.data);
  }
